{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\Project3\\\\anderSaturday\\\\my-app\\\\src\\\\App.js\";\nimport './App.css';\nimport Spotify from 'spotify-web-api-js';\nimport React, { Component } from 'react';\nconst spotifyWebApi = new Spotify();\n\nclass App extends Component {\n  constructor() {\n    super();\n    const params = this.getHashParams();\n    const token = params.access_token;\n\n    if (token) {\n      spotifyWebApi.setAccessToken(token);\n    }\n\n    this.state = {\n      loggedIn: token ? true : false,\n      nowPlaying: {\n        name: 'Not Checked',\n        image: ''\n      },\n      favArtists: {\n        names: \"\"\n      },\n      newPlaylist: {\n        tracks: []\n      }\n    };\n  }\n\n  getHashParams() {\n    var hashParams = {};\n    var e,\n        r = /([^&;=]+)=?([^&;]*)/g,\n        q = window.location.hash.substring(1);\n    e = r.exec(q);\n\n    while (e) {\n      hashParams[e[1]] = decodeURIComponent(e[2]);\n      e = r.exec(q);\n    }\n\n    return hashParams;\n  }\n\n  getNowPlaying() {\n    spotifyWebApi.getMyCurrentPlaybackState().then(response => {\n      console.log(response);\n      this.setState({\n        nowPlaying: {\n          name: response.item.name,\n          image: response.item.album.images[0].url\n        }\n      });\n    });\n  }\n\n  getFavorites() {\n    spotifyWebApi.getMyTopArtists().then(response => {\n      console.log(response);\n      this.setState({\n        favArtists: {\n          names: response.items[0].name + \", \" + response.items[1].name + \", \" + response.items[2].name + \", \" + response.items[3].name + \", \" + response.items[4].name + \", \" + response.items[5].name + \", \" + response.items[6].name + \", \" + response.items[7].name + \", \" + response.items[8].name + \", \" + response.items[9].name\n        }\n      });\n    });\n  }\n\n  makePlaylist() {\n    spotifyWebApi.getRecommendations().then(response => {\n      console.log(response);\n      this.setState({\n        newPlaylist: {\n          tracks: response\n        }\n      });\n    });\n  } //fetch('https://api.spotify.com/v1/me/playlists',){\n  // }\n\n  /*\n  \n   getArtists(){\n     spotifyWebApi.getFollowedArtists()\n     console.log(response.artists)\n     .then(res => res.json())\n     .then((response)=> {\n       this.setState({\n         followedArtists: {\n           names: response.artists\n         }\n       })\n     })\n   }\n   */\n\n  /*\n  getNowPlayingMyWay(){\n    var request = new XMLHttpRequest();\n    request.open(\"GET\",\"https://api.spotify.com/v1/me/player/currently-playing\",true);\n    console.log(res)\n    request.send();\n    request.onload = function(){\n      var data = JSON.parse(this.response);\n      console.log(data)\n        //var trackName = respon.item.name    \n    }\n    request.send();\n  }\n  */\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"http://localhost:8888\",\n        children: \" Login to Spotify \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Now Playing: \", this.state.nowPlaying.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Fav artists: \", this.state.favArtists.names]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Recommendations: \", this.state.newPlaylist.tracks]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: this.state.nowPlaying.image,\n          style: {\n            height: 150\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this), this.state.loggedIn && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => this.getNowPlaying(),\n        children: \"Check Now Playing\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 11\n      }, this), this.state.loggedIn && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => this.getFavorites(),\n        children: \"Check fav artists\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 11\n      }, this), this.state.loggedIn && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => this.makePlaylist(),\n        children: \"Recommendations:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/xampp/htdocs/Project3/anderSaturday/my-app/src/App.js"],"names":["Spotify","React","Component","spotifyWebApi","App","constructor","params","getHashParams","token","access_token","setAccessToken","state","loggedIn","nowPlaying","name","image","favArtists","names","newPlaylist","tracks","hashParams","e","r","q","window","location","hash","substring","exec","decodeURIComponent","getNowPlaying","getMyCurrentPlaybackState","then","response","console","log","setState","item","album","images","url","getFavorites","getMyTopArtists","items","makePlaylist","getRecommendations","render","height"],"mappings":"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","sourcesContent":["import './App.css';\nimport Spotify from 'spotify-web-api-js';\nimport React, { Component } from 'react';\n\nconst spotifyWebApi = new Spotify();\n\nclass App extends Component {\n\n  constructor(){\n    super();\n    const params = this.getHashParams();\n    const token = params.access_token;\n    if (token) {\n      spotifyWebApi.setAccessToken(token);\n    }\n    this.state = {\n      loggedIn: token ? true : false,\n      nowPlaying: { name: 'Not Checked', image: '' },\n      favArtists: {names:\"\"},\n      newPlaylist:{tracks:[]}\n    }\n  }\n  getHashParams() {\n    var hashParams = {};\n    var e, r = /([^&;=]+)=?([^&;]*)/g,\n        q = window.location.hash.substring(1);\n    e = r.exec(q)\n    while (e) {\n       hashParams[e[1]] = decodeURIComponent(e[2]);\n       e = r.exec(q);\n    }\n    return hashParams;\n  }\n\n\n  \n  getNowPlaying(){\n    spotifyWebApi.getMyCurrentPlaybackState()\n        .then((response) => {\n          console.log(response)\n        this.setState({\n          \n          nowPlaying: { \n              name: response.item.name,\n              image: response.item.album.images[0].url\n            }\n        })\n      })\n  }\n\n\n\n  getFavorites(){\n    spotifyWebApi.getMyTopArtists()\n    \n    .then((response) =>{\n      console.log(response)\n      this.setState({\n        favArtists:{\n          names: response.items[0].name +\", \" + response.items[1].name +\", \" + \n          response.items[2].name +\", \" + response.items[3].name +\", \" + \n          response.items[4].name +\", \" + response.items[5].name +\", \" + \n          response.items[6].name +\", \" + response.items[7].name +\", \" + \n          response.items[8].name +\", \" + response.items[9].name\n          \n        }\n      })\n    })\n  }\n\n  makePlaylist(){\n    spotifyWebApi.getRecommendations()\n    .then((response) =>{\n      console.log(response)\n      this.setState({\n        newPlaylist:{\n          tracks: response\n        }\n      })\n    })\n  }\n\n\n\n  //fetch('https://api.spotify.com/v1/me/playlists',){\n    \n // }\n\n\n /*\n\n\n  getArtists(){\n    spotifyWebApi.getFollowedArtists()\n    console.log(response.artists)\n    .then(res => res.json())\n    .then((response)=> {\n      this.setState({\n        followedArtists: {\n          names: response.artists\n        }\n      })\n    })\n  }\n  */\n  /*\n  getNowPlayingMyWay(){\n    var request = new XMLHttpRequest();\n    request.open(\"GET\",\"https://api.spotify.com/v1/me/player/currently-playing\",true);\n    console.log(res)\n    request.send();\n    request.onload = function(){\n      var data = JSON.parse(this.response);\n      console.log(data)\n        //var trackName = respon.item.name    \n    }\n    request.send();\n  }\n*/\n\n \n\n\n  render() {\n    return (\n     \n      <div className=\"App\">\n        <a href='http://localhost:8888' > Login to Spotify </a>\n        <div>\n          Now Playing: { this.state.nowPlaying.name }\n        </div>\n       \n        <div>\n        Fav artists: {this.state.favArtists.names}\n        \n        </div>\n\n        <div>\n        Recommendations: {this.state.newPlaylist.tracks}\n        \n        </div>\n       \n        <div>\n          <img src={this.state.nowPlaying.image} style={{ height: 150 }}/>\n        </div>\n        { this.state.loggedIn &&\n          <button onClick={() => this.getNowPlaying()}>\n            Check Now Playing\n          </button>\n          \n        }\n \n        { this.state.loggedIn &&\n          <button onClick={() => this.getFavorites()}>\n            Check fav artists\n          </button>\n        }\n\n        { this.state.loggedIn &&\n          <button onClick={() => this.makePlaylist()}>\n            Recommendations: \n          </button>\n        }\n        \n      </div>\n     \n    );\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}